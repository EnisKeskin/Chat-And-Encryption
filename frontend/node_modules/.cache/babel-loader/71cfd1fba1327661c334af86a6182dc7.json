{"ast":null,"code":"var _jsxFileName = \"/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nimport Form from 'react-bootstrap/FormGroup';\nlet io = null;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEventChat = e => {\n      const message = e.target.value;\n      this.sendMessage = message;\n    };\n\n    this.onClickEventSend = e => {\n      e.preventDefault();\n      io.emit('chatMessage', {\n        message: this.sendMessage\n      });\n    };\n\n    this.isEmpty = obj => {\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) return false;\n      }\n\n      return true;\n    };\n\n    this.chatMessageShow = () => {\n      const message = this.state.getMessage;\n      const chatMessage = [];\n\n      if (!this.isEmpty(message)) {\n        message.forEach((messageInfo, key) => {\n          if (this.state.userId !== messageInfo.userId) {\n            chatMessage.push(React.createElement(\"div\", {\n              className: \"incoming-msg\",\n              key: key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"incoming-msg-user\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, \"Enis Keskin\"), React.createElement(\"span\", {\n              className: \"chat-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, \"Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden \"), React.createElement(\"div\", {\n              className: \"incoming-msg-date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, \"23:05\")));\n          } else {\n            chatMessage.push(React.createElement(\"div\", {\n              className: \"outgoing-msg\",\n              key: key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"outgoing-msg-user\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, \"Enis Keskin\"), React.createElement(\"span\", {\n              className: \"chat-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, \"Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden \"), React.createElement(\"div\", {\n              className: \"outgoing-msg-date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, \"23:05\")));\n          }\n        });\n        return chatMessage;\n      }\n    };\n\n    this.sendMessage = '';\n    this.state = {\n      getMessage: {},\n      redirect: false,\n      userId: ''\n    };\n  }\n\n  componentDidMount() {\n    const chatArea = document.querySelector(\".chatArea\");\n    chatArea.scrollTop = chatArea.scrollHeight;\n    const token = localStorage.getItem('token');\n\n    if (!isNullOrUndefined(token)) {\n      io = Io.connectionsRoom('Chat', token);\n      io.on('error', () => {\n        this.setState({\n          redirect: true\n        });\n      });\n      io.emit('allMessage');\n      io.on('returnedMessage', chat => {\n        this.setState({\n          userId: chat.userId,\n          getMessage: chat.messageInfo\n        });\n      });\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainChat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.chatMessageShow()), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"chatInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Mesaj\",\n      onChange: this.onChangeEventChat.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onClickEventSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"G\\xF6nder\"))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js"],"names":["React","Component","InputGroup","FormControl","Button","Io","Redirect","isNullOrUndefined","Form","io","Chat","constructor","props","onChangeEventChat","e","message","target","value","sendMessage","onClickEventSend","preventDefault","emit","isEmpty","obj","key","hasOwnProperty","chatMessageShow","state","getMessage","chatMessage","forEach","messageInfo","userId","push","redirect","componentDidMount","chatArea","document","querySelector","scrollTop","scrollHeight","token","localStorage","getItem","connectionsRoom","on","setState","chat","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nimport Form from 'react-bootstrap/FormGroup';\nlet io = null;\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.sendMessage = '';\n        this.state = {\n            getMessage: {},\n            redirect: false,\n            userId: '',\n        }\n    }\n    componentDidMount() {\n        const chatArea = document.querySelector(\".chatArea\");\n        chatArea.scrollTop = chatArea.scrollHeight\n\n        const token = localStorage.getItem('token');\n        if (!isNullOrUndefined(token)) {\n\n            io = Io.connectionsRoom('Chat', token);\n\n            io.on('error', () => {\n                this.setState({\n                    redirect: true,\n                });\n            });\n\n            io.emit('allMessage');\n\n            io.on('returnedMessage', (chat) => {\n                this.setState({\n                    userId: chat.userId,\n                    getMessage: chat.messageInfo\n                });\n\n            });\n\n        } else {\n            this.setState({\n                redirect: true,\n            })\n        }\n\n    }\n\n    onChangeEventChat = (e) => {\n        const message = e.target.value;\n        this.sendMessage = message\n    }\n\n    onClickEventSend = (e) => {\n        e.preventDefault();\n        io.emit('chatMessage', { message: this.sendMessage });\n    }\n\n    isEmpty = (obj) => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n\n    chatMessageShow = () => {\n        const message = this.state.getMessage;\n        const chatMessage = [];\n        if (!this.isEmpty(message)) {\n            message.forEach((messageInfo, key) => {\n                if (this.state.userId !== messageInfo.userId) {\n                    chatMessage.push(\n                        <div className=\"incoming-msg\" key={key}>\n                            <div className=\"incoming-msg-user\">Enis Keskin</div>\n                            <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n                            <div className=\"incoming-msg-date\">23:05</div>\n                        </div>)\n                } else {\n                    chatMessage.push(\n                        <div className=\"outgoing-msg\" key={key}>\n                            <div className=\"outgoing-msg-user\">Enis Keskin</div>\n                            <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n                            <div className=\"outgoing-msg-date\">23:05</div>\n                        </div>)\n                }\n            });\n            return chatMessage;\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"mainChat\">\n                {this.state.redirect ?\n                    <Redirect to='/' />\n                    :\n                    <div className=\"chat\">\n                        <div className=\"chatArea\">\n                            {this.chatMessageShow()}\n                        </div>\n                        <Form>\n                            <InputGroup className=\"chatInput\" >\n                                <FormControl placeholder=\"Mesaj\" onChange={this.onChangeEventChat.bind(this)} />\n                                <InputGroup.Append>\n                                    <Button variant=\"primary\" onClick={this.onClickEventSend.bind(this)}>Gönder</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Form>\n                    </div>\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}