{"ast":null,"code":"import io from 'socket.io-client';\nimport Ip from './config';\nconsole.log(Ip);\n\nclass socketConnect {\n  constructor() {\n    this.connections = {};\n  }\n\n  connection(token) {\n    this.connections = io(\"\".concat(Ip), token ? {\n      query: {\n        token: token\n      }\n    } : null);\n    return this.connections;\n  }\n\n  connectionsRoom(token) {\n    this.room2 = this.connections[room];\n\n    if (this.room2 && this.room2.query) {\n      this.room2.query.token = token ? token : null;\n    }\n\n    this.connections[room] = this.room2 ? this.room2 : io(\"\".concat(Ip) + room, token ? {\n      query: {\n        token: token\n      }\n    } : null);\n    return this.connections[room];\n  }\n\n  connectionsRoomDelete() {\n    return this.connections = [];\n  }\n\n}\n\nconst socket = new socketConnect();\nexport default socket;","map":{"version":3,"sources":["/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/connection.js"],"names":["io","Ip","console","log","socketConnect","constructor","connections","connection","token","query","connectionsRoom","room2","room","connectionsRoomDelete","socket"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAOC,EAAP,MAAe,UAAf;AACAC,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AACA,MAAMG,aAAN,CAAoB;AAChBC,EAAAA,WAAW,GAAG;AACV,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,SAAKF,WAAL,GAAmBN,EAAE,WAAIC,EAAJ,GAAUO,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAEA;AAAT;AAAT,KAAH,GAAiC,IAAhD,CAArB;AACA,WAAO,KAAKF,WAAZ;AACH;;AAEDI,EAAAA,eAAe,CAACF,KAAD,EAAQ;AACnB,SAAKG,KAAL,GAAa,KAAKL,WAAL,CAAiBM,IAAjB,CAAb;;AACA,QAAI,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAWF,KAA7B,EAAoC;AAChC,WAAKE,KAAL,CAAWF,KAAX,CAAiBD,KAAjB,GAAyBA,KAAK,GAAGA,KAAH,GAAW,IAAzC;AACH;;AACD,SAAKF,WAAL,CAAiBM,IAAjB,IAAyB,KAAKD,KAAL,GAAa,KAAKA,KAAlB,GAA0BX,EAAE,CAAC,UAAGC,EAAH,IAAUW,IAAX,EAAiBJ,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAEA;AAAT;AAAT,KAAH,GAAiC,IAAvD,CAArD;AACA,WAAO,KAAKF,WAAL,CAAiBM,IAAjB,CAAP;AACH;;AAEDC,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKP,WAAL,GAAmB,EAA1B;AACH;;AArBe;;AAwBpB,MAAMQ,MAAM,GAAG,IAAIV,aAAJ,EAAf;AAEA,eAAeU,MAAf","sourcesContent":["import io from 'socket.io-client';\nimport Ip from './config';\nconsole.log(Ip);\nclass socketConnect {\n    constructor() {\n        this.connections = {};\n    }\n\n    connection(token) {\n        this.connections = io(`${Ip}`, token ? { query: { token: token } } : null);\n        return this.connections\n    }\n\n    connectionsRoom(token) {\n        this.room2 = this.connections[room];\n        if (this.room2 && this.room2.query) {\n            this.room2.query.token = token ? token : null;\n        }\n        this.connections[room] = this.room2 ? this.room2 : io(`${Ip}` + room, token ? { query: { token: token } } : null);\n        return this.connections[room]\n    }\n\n    connectionsRoomDelete() {\n        return this.connections = [];\n    }\n\n}\nconst socket = new socketConnect();\n\nexport default socket\n"]},"metadata":{},"sourceType":"module"}