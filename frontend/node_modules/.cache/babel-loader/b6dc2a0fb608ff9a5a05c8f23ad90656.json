{"ast":null,"code":"var _jsxFileName = \"/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nimport Form from 'react-bootstrap/FormGroup';\nlet io = null;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEventChat = e => {\n      const message = e.target.value;\n      this.sendMessage = message;\n    };\n\n    this.onClickEventSend = e => {\n      e.preventDefault();\n      io.emit('chatMessage', {\n        message: this.sendMessage\n      });\n    };\n\n    this.isEmpty = obj => {\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) return false;\n      }\n\n      return true;\n    };\n\n    this.chatMessageShow = () => {\n      const message = this.state.getMessage;\n      console.log(message);\n      const chatMessage = [];\n\n      if (!this.isEmpty(message)) {\n        if (message.length > 1) {\n          message.forEach((messageInfo, key) => {\n            if (this.state.userId !== messageInfo.userId) {\n              chatMessage.push(React.createElement(\"div\", {\n                className: \"incoming-msg\",\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"incoming-msg-user\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 85\n                },\n                __self: this\n              }, messageInfo.firstname + ' ' + messageInfo.lastname), React.createElement(\"span\", {\n                className: \"chat-msg-left\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86\n                },\n                __self: this\n              }, messageInfo.message), React.createElement(\"div\", {\n                className: \"incoming-msg-date\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87\n                },\n                __self: this\n              }, messageInfo.date)));\n            } else {\n              chatMessage.push(React.createElement(\"div\", {\n                className: \"outgoing-msg\",\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"outgoing-msg-user\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92\n                },\n                __self: this\n              }, messageInfo.firstname + ' ' + messageInfo.lastname), React.createElement(\"span\", {\n                className: \"chat-msg\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }, messageInfo.message), React.createElement(\"div\", {\n                className: \"outgoing-msg-date\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 94\n                },\n                __self: this\n              }, messageInfo.date)));\n            }\n          });\n        }\n\n        return chatMessage;\n      }\n    };\n\n    this.scrollLocation = () => {\n      const chatArea = document.querySelector(\".chatArea\");\n      chatArea.scrollTop = chatArea.scrollHeight;\n    };\n\n    this.sendMessage = '';\n    this.getMessage = {};\n    this.state = {\n      getMessage: {},\n      redirect: false,\n      userId: ''\n    };\n  }\n\n  componentDidMount() {\n    this.scrollLocation();\n    const token = localStorage.getItem('token');\n\n    if (!isNullOrUndefined(token)) {\n      io = Io.connectionsRoom('Chat', token);\n      io.on('error', () => {\n        this.setState({\n          redirect: true\n        });\n      });\n      io.emit('allMessage');\n      io.on('returnedMessage', chat => {\n        this.getMessage = chat.messageInfo;\n\n        if (chat.userId == null) {\n          this.setState({\n            getMessage: this.getMessage\n          });\n        } else {\n          this.setState({\n            userId: chat.userId,\n            getMessage: this.getMessage\n          });\n        }\n\n        this.scrollLocation();\n      });\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainChat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, console.log('Geldi'), this.chatMessageShow()), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"chatInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Mesaj\",\n      onChange: this.onChangeEventChat.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onClickEventSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"G\\xF6nder\"))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js"],"names":["React","Component","InputGroup","FormControl","Button","Io","Redirect","isNullOrUndefined","Form","io","Chat","constructor","props","onChangeEventChat","e","message","target","value","sendMessage","onClickEventSend","preventDefault","emit","isEmpty","obj","key","hasOwnProperty","chatMessageShow","state","getMessage","console","log","chatMessage","length","forEach","messageInfo","userId","push","firstname","lastname","date","scrollLocation","chatArea","document","querySelector","scrollTop","scrollHeight","redirect","componentDidMount","token","localStorage","getItem","connectionsRoom","on","setState","chat","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nimport Form from 'react-bootstrap/FormGroup';\nlet io = null;\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.sendMessage = '';\n        this.getMessage = {};\n        this.state = {\n            getMessage: {},\n            redirect: false,\n            userId: '',\n        }\n    }\n    componentDidMount() {\n        this.scrollLocation();\n        const token = localStorage.getItem('token');\n        if (!isNullOrUndefined(token)) {\n\n            io = Io.connectionsRoom('Chat', token);\n\n            io.on('error', () => {\n                this.setState({\n                    redirect: true,\n                });\n            });\n            io.emit('allMessage');\n\n            io.on('returnedMessage', (chat) => {\n                this.getMessage = chat.messageInfo\n                if (chat.userId == null) {\n                    this.setState({\n                        getMessage: this.getMessage\n                    });\n\n                } else {\n                    this.setState({\n                        userId: chat.userId,\n                        getMessage: this.getMessage\n                    });\n                }\n                this.scrollLocation();\n            });\n\n        } else {\n            this.setState({\n                redirect: true,\n            })\n        }\n\n    }\n\n    onChangeEventChat = (e) => {\n        const message = e.target.value;\n        this.sendMessage = message\n    }\n\n    onClickEventSend = (e) => {\n        e.preventDefault();\n        io.emit('chatMessage', { message: this.sendMessage });\n    }\n\n    isEmpty = (obj) => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n\n    chatMessageShow = () => {\n        const message = this.state.getMessage;\n        console.log(message)\n        const chatMessage = [];\n        if (!this.isEmpty(message)) {\n            if (message.length > 1) {\n                message.forEach((messageInfo, key) => {\n                    if (this.state.userId !== messageInfo.userId) {\n                        chatMessage.push(\n                            <div className=\"incoming-msg\" key={key}>\n                                <div className=\"incoming-msg-user\">{messageInfo.firstname + ' ' + messageInfo.lastname}</div>\n                                <span className=\"chat-msg-left\">{messageInfo.message}</span>\n                                <div className=\"incoming-msg-date\">{messageInfo.date}</div>\n                            </div>)\n                    } else {\n                        chatMessage.push(\n                            <div className=\"outgoing-msg\" key={key}>\n                                <div className=\"outgoing-msg-user\">{messageInfo.firstname + ' ' + messageInfo.lastname}</div>\n                                <span className=\"chat-msg\">{messageInfo.message}</span>\n                                <div className=\"outgoing-msg-date\">{messageInfo.date}</div>\n                            </div>)\n                    }\n                });\n\n            }\n            return chatMessage;\n        }\n\n    }\n\n    scrollLocation = () => {\n        const chatArea = document.querySelector(\".chatArea\");\n        chatArea.scrollTop = chatArea.scrollHeight\n    }\n\n    render() {\n        return (\n            <div className=\"mainChat\">\n                {this.state.redirect ?\n                    <Redirect to='/' />\n                    :\n                    <div className=\"chat\">\n                        <div className=\"chatArea\">\n                            {console.log('Geldi')}\n                            {this.chatMessageShow()}\n                        </div>\n                        <Form>\n                            <InputGroup className=\"chatInput\" >\n                                <FormControl placeholder=\"Mesaj\" onChange={this.onChangeEventChat.bind(this)} />\n                                <InputGroup.Append>\n                                    <Button variant=\"primary\" onClick={this.onClickEventSend.bind(this)}>Gönder</Button>\n                                </InputGroup.Append>\n                            </InputGroup>\n                        </Form>\n                    </div>\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}