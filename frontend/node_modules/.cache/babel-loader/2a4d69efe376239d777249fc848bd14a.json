{"ast":null,"code":"var _jsxFileName = \"/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nlet io = null;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEventChat = e => {\n      const message = e.target.value;\n      this.setState({\n        message\n      });\n    };\n\n    this.onClickEventSend = e => {\n      e.preventDefault();\n      io.emit('chatMessage', {\n        message: this.state.message\n      });\n    };\n\n    this.chatMessageShow = () => {\n      const message = this.state.message;\n      const chatMessage = [];\n      console.log(message);\n\n      if (message !== {}) {\n        message.forEach((messageInfo, key) => {\n          if (this.state.userId !== messageInfo.userId) {\n            chatMessage.push(React.createElement(\"div\", {\n              className: \"incoming-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"incoming-msg-user\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, \"Enis Keskin\"), React.createElement(\"span\", {\n              className: \"chat-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, \"Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden \"), React.createElement(\"div\", {\n              className: \"incoming-msg-date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, \"23:05\")));\n          } else {\n            chatMessage.push(React.createElement(\"div\", {\n              className: \"outgoing-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"outgoing-msg-user\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, \"Enis Keskin\"), React.createElement(\"span\", {\n              className: \"chat-msg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, \"Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden \"), React.createElement(\"div\", {\n              className: \"outgoing-msg-date\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, \"23:05\")));\n          }\n        });\n        return chatMessage;\n      }\n    };\n\n    this.state = {\n      message: {},\n      redirect: false,\n      userId: ''\n    };\n  }\n\n  componentDidMount() {\n    const chatArea = document.querySelector(\".chatArea\");\n    chatArea.scrollTop = chatArea.scrollHeight;\n    const token = localStorage.getItem('token');\n\n    if (!isNullOrUndefined(token)) {\n      io = Io.connectionsRoom('Chat', token);\n      io.on('error', errorInfo => {\n        this.setState({\n          redirect: true\n        });\n      });\n      io.emit('allMessage');\n      io.on('returnedMessage', chat => {\n        this.setState({\n          userId: chat.userId,\n          message: chat.messageInfo\n        });\n      });\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainChat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.chatMessageShow()), React.createElement(InputGroup, {\n      className: \"chatInput\",\n      onChange: this.onChangeEventChat.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Mesaj\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onClickEventSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"G\\xF6nder\")))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js"],"names":["React","Component","InputGroup","FormControl","Button","Io","Redirect","isNullOrUndefined","io","Chat","constructor","props","onChangeEventChat","e","message","target","value","setState","onClickEventSend","preventDefault","emit","state","chatMessageShow","chatMessage","console","log","forEach","messageInfo","key","userId","push","redirect","componentDidMount","chatArea","document","querySelector","scrollTop","scrollHeight","token","localStorage","getItem","connectionsRoom","on","errorInfo","chat","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nlet io = null;\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: {},\n            redirect: false,\n            userId: '',\n        }\n    }\n    componentDidMount() {\n        const chatArea = document.querySelector(\".chatArea\");\n        chatArea.scrollTop = chatArea.scrollHeight\n        const token = localStorage.getItem('token');\n        if (!isNullOrUndefined(token)) {\n            io = Io.connectionsRoom('Chat', token);\n            io.on('error', (errorInfo) => {\n                this.setState({\n                    redirect: true,\n                });\n            });\n            io.emit('allMessage');\n            io.on('returnedMessage', (chat) => {\n                this.setState({\n                    userId: chat.userId,\n                    message: chat.messageInfo\n                });\n\n            });\n\n        } else {\n            this.setState({\n                redirect: true,\n            })\n        }\n\n    }\n\n    onChangeEventChat = (e) => {\n        const message = e.target.value;\n        this.setState({\n            message\n        });\n    }\n\n    onClickEventSend = (e) => {\n        e.preventDefault();\n        io.emit('chatMessage', { message: this.state.message });\n    }\n\n    chatMessageShow = () => {\n        const message = this.state.message\n        const chatMessage = [];\n        console.log(message);\n        if (message !== {}) {\n            message.forEach((messageInfo, key) => {\n                if (this.state.userId !== messageInfo.userId) {\n                    chatMessage.push(\n                        <div className=\"incoming-msg\">\n                            <div className=\"incoming-msg-user\">Enis Keskin</div>\n                            <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n                            <div className=\"incoming-msg-date\">23:05</div>\n                        </div>)\n                } else {\n                    chatMessage.push(\n                        <div className=\"outgoing-msg\">\n                            <div className=\"outgoing-msg-user\">Enis Keskin</div>\n                            <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n                            <div className=\"outgoing-msg-date\">23:05</div>\n                        </div>)\n                }\n            });\n            return chatMessage;\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"mainChat\">\n                {this.state.redirect ?\n                    <Redirect to='/' />\n                    :\n                    <div className=\"chat\">\n                        <div className=\"chatArea\">\n                            {this.chatMessageShow()}\n                        </div>\n                        <InputGroup className=\"chatInput\" onChange={this.onChangeEventChat.bind(this)}>\n                            <FormControl placeholder=\"Mesaj\" />\n                            <InputGroup.Append>\n                                <Button variant=\"primary\" onClick={this.onClickEventSend.bind(this)}>Gönder</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </div>\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}