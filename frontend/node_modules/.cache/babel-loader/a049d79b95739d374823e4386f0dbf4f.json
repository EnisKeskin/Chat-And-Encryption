{"ast":null,"code":"var _jsxFileName = \"/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nlet io = null;\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEventChat = e => {\n      const message = e.target.value;\n      this.setState({\n        sendMessage: message\n      });\n    };\n\n    this.onClickEventSend = e => {\n      e.preventDefault();\n      io.emit('chatMessage', {\n        message: this.state.sendMessage\n      });\n    };\n\n    this.isEmpty = obj => {\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) return false;\n      }\n\n      return true;\n    };\n\n    this.chatMessageShow = () => {\n      const message = this.state.getMessage;\n      const chatMessage = [];\n      console.log(getMessage); // if (!this.isEmpty(message)) {\n      //     message.forEach((messageInfo, key) => {\n      //         if (this.state.userId !== messageInfo.userId) {\n      //             chatMessage.push(\n      //                 <div className=\"incoming-msg\" key={key}>\n      //                     <div className=\"incoming-msg-user\">Enis Keskin</div>\n      //                     <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n      //                     <div className=\"incoming-msg-date\">23:05</div>\n      //                 </div>)\n      //         } else {\n      //             chatMessage.push(\n      //                 <div className=\"outgoing-msg\" key={key}>\n      //                     <div className=\"outgoing-msg-user\">Enis Keskin</div>\n      //                     <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n      //                     <div className=\"outgoing-msg-date\">23:05</div>\n      //                 </div>)\n      //         }\n      //     });\n      //     return chatMessage;\n      // }\n    };\n\n    this.state = {\n      getMessage: {},\n      sendMessage: {},\n      redirect: false,\n      userId: ''\n    };\n  }\n\n  componentDidMount() {\n    const chatArea = document.querySelector(\".chatArea\");\n    chatArea.scrollTop = chatArea.scrollHeight;\n    const token = localStorage.getItem('token');\n\n    if (!isNullOrUndefined(token)) {\n      io = Io.connectionsRoom('Chat', token);\n      io.on('error', errorInfo => {\n        this.setState({\n          redirect: true\n        });\n      });\n      io.emit('allMessage');\n      io.on('returnedMessage', chat => {\n        this.setState({\n          userId: chat.userId,\n          getMessage: chat.messageInfo\n        });\n      });\n    } else {\n      this.setState({\n        redirect: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainChat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.redirect ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.chatMessageShow()), React.createElement(InputGroup, {\n      className: \"chatInput\",\n      onChange: this.onChangeEventChat.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Mesaj\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onClickEventSend.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"G\\xF6nder\")))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/enis/Desktop/BilgiGuvenligiProje/frontend/src/Components/Chat.js"],"names":["React","Component","InputGroup","FormControl","Button","Io","Redirect","isNullOrUndefined","io","Chat","constructor","props","onChangeEventChat","e","message","target","value","setState","sendMessage","onClickEventSend","preventDefault","emit","state","isEmpty","obj","key","hasOwnProperty","chatMessageShow","getMessage","chatMessage","console","log","redirect","userId","componentDidMount","chatArea","document","querySelector","scrollTop","scrollHeight","token","localStorage","getItem","connectionsRoom","on","errorInfo","chat","messageInfo","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport Io from '../connection';\nimport { Redirect } from 'react-router';\nimport { isNullOrUndefined } from 'util';\nlet io = null;\nclass Chat extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getMessage: {},\n            sendMessage: {},\n            redirect: false,\n            userId: '',\n        }\n    }\n    componentDidMount() {\n        const chatArea = document.querySelector(\".chatArea\");\n        chatArea.scrollTop = chatArea.scrollHeight\n        const token = localStorage.getItem('token');\n        if (!isNullOrUndefined(token)) {\n            io = Io.connectionsRoom('Chat', token);\n            io.on('error', (errorInfo) => {\n                this.setState({\n                    redirect: true,\n                });\n            });\n            io.emit('allMessage');\n            io.on('returnedMessage', (chat) => {\n                this.setState({\n                    userId: chat.userId,\n                    getMessage: chat.messageInfo\n                });\n\n            });\n\n        } else {\n            this.setState({\n                redirect: true,\n            })\n        }\n\n    }\n\n    onChangeEventChat = (e) => {\n        const message = e.target.value;\n        this.setState({\n            sendMessage: message\n        });\n    }\n\n    onClickEventSend = (e) => {\n        e.preventDefault();\n        io.emit('chatMessage', { message: this.state.sendMessage });\n    }\n\n    isEmpty = (obj) => {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key))\n                return false;\n        }\n        return true;\n    }\n\n    chatMessageShow = () => {\n        const message = this.state.getMessage;\n        const chatMessage = [];\n        console.log(getMessage);\n        // if (!this.isEmpty(message)) {\n        //     message.forEach((messageInfo, key) => {\n        //         if (this.state.userId !== messageInfo.userId) {\n        //             chatMessage.push(\n        //                 <div className=\"incoming-msg\" key={key}>\n        //                     <div className=\"incoming-msg-user\">Enis Keskin</div>\n        //                     <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n        //                     <div className=\"incoming-msg-date\">23:05</div>\n        //                 </div>)\n        //         } else {\n        //             chatMessage.push(\n        //                 <div className=\"outgoing-msg\" key={key}>\n        //                     <div className=\"outgoing-msg-user\">Enis Keskin</div>\n        //                     <span className=\"chat-msg\">Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden Giden </span>\n        //                     <div className=\"outgoing-msg-date\">23:05</div>\n        //                 </div>)\n        //         }\n        //     });\n        //     return chatMessage;\n        // }\n\n    }\n\n    render() {\n        return (\n            <div className=\"mainChat\">\n                {this.state.redirect ?\n                    <Redirect to='/' />\n                    :\n                    <div className=\"chat\">\n                        <div className=\"chatArea\">\n                            {this.chatMessageShow()}\n                        </div>\n                        <InputGroup className=\"chatInput\" onChange={this.onChangeEventChat.bind(this)}>\n                            <FormControl placeholder=\"Mesaj\" />\n                            <InputGroup.Append>\n                                <Button variant=\"primary\" onClick={this.onClickEventSend.bind(this)}>Gönder</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </div>\n                }\n            </div>\n\n        )\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}